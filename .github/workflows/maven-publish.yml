# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: build and deploy (Maven Package)

on:
  # release:
  #   types: [created]
  push:
    branches:
      - main

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK 11
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '11'
  #       distribution: 'temurin'
  #       server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
  #       settings-path: ${{ github.workspace }} # location for the settings.xml file

  #   - name: Build with Maven
  #     run: mvn -B package --file pom.xml

  #   - name: Publish to GitHub Packages Apache Maven
  #     run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
  #     env:
  #       GITHUB_TOKEN: ${{ github.token }}
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/keyword-api-app:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/keyword-api-app:latest

      - name: Deploy to EC2 server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/keyword-api-app:latest
            docker stop keyword-api-app || true
            docker rm keyword-api-app || true
            docker run -d --name keyword-api-app -p 9090:9090 ${{ secrets.DOCKERHUB_USERNAME }}/keyword-api-app:latest

